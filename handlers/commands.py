"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
import requests
from config import QUOTES_URL
import random
from bs4 import BeautifulSoup

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥
commands_router = Router()


@commands_router.message(Command("start"))
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
        f"–Ø - –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫.\n\n"
        "–° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å:\n"
        "‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏\n"
        "‚Ä¢ –û—Ç–º–µ—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—á–µ–∫\n"
        "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥."
    )
    await message.answer(welcome_text)


@commands_router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/menu - –û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/date - –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞—Ç\n"
        "/reminders - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏\n"
        "/quotes - –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã\n\n"
        "üí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!"
    )
    await message.answer(help_text)


@commands_router.message(Command("menu"))
async def cmd_menu(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    from keyboards.main_menu import get_main_menu_keyboard
    
    menu_text = (
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    await message.answer(
        menu_text,
        reply_markup=get_main_menu_keyboard()
    )


@commands_router.message(Command("date"))
async def cmd_date(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /date - –ø–∞—Ä—Å–∏–Ω–≥ –¥–∞—Ç"""
    from utils.date_parser import date_parser
    
    help_text = (
        "üìÖ –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞—Ç\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –¥–∞—Ç—É –≤ –ª—é–±–æ–º –∏–∑ —Ñ–æ—Ä–º–∞—Ç–æ–≤:\n\n"
        "‚Ä¢ –°–µ–≥–æ–¥–Ω—è, –∑–∞–≤—Ç—Ä–∞, –≤—á–µ—Ä–∞\n"
        "‚Ä¢ 25.12.2024, 2024-12-25\n"
        "‚Ä¢ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –≤—Ç–æ—Ä–Ω–∏–∫, —Å—Ä–µ–¥–∞...\n"
        "‚Ä¢ –ß–µ—Ä–µ–∑ 3 –¥–Ω—è, —á–µ—Ä–µ–∑ 2 –Ω–µ–¥–µ–ª–∏\n"
        "‚Ä¢ 15.12 (—Ç–µ–∫—É—â–∏–π –≥–æ–¥)\n\n"
        "–ü—Ä–∏–º–µ—Ä: '–Ω–∞–ø–æ–º–Ω–∏ –º–Ω–µ –∑–∞–≤—Ç—Ä–∞ –≤ 9:00'"
    )
    await message.answer(help_text)


@commands_router.message(Command("reminders"))
async def cmd_reminders(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reminders - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏"""
    from utils.reminder_service import get_reminder_service
    
    reminder_service = get_reminder_service()
    if not reminder_service:
        await message.answer("‚ùå –°–µ—Ä–≤–∏—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return
    
    stats = reminder_service.get_reminder_stats(message.from_user.id)
    
    reminders_text = (
        f"üîî –í–∞—à–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n\n"
        f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {stats['active_reminders']}\n"
        f"–í—Å–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {stats['total_reminders']}\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥."
    )
    await message.answer(reminders_text)


@commands_router.message(Command("quotes"))
async def cmd_quote(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /quotes - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ü–∏—Ç–∞—Ç—ã"""

    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
    }

    try:
        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–∞–π—Ç—É
        response = requests.get(QUOTES_URL, headers=headers, timeout=10)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞

        # –ü–∞—Ä—Å–∏–º HTML
        soup = BeautifulSoup(response.content, 'html.parser')

        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ü–∏—Ç–∞—Ç—ã (–æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ div —Å –∫–ª–∞—Å—Å–æ–º field-item even)
        quotes = soup.find_all('div', class_='field-name-body')

        if not quotes:
            await message.answer("–¶–∏—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return None

        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ç–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç
        quote_texts = []
        for quote in quotes:
            # –ò—â–µ–º –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã –≤–Ω—É—Ç—Ä–∏ —Ü–∏—Ç–∞—Ç
            paragraphs = quote.find_all('p')
            for p in paragraphs:
                text = p.get_text(strip=True)
                if text and len(text) > 10:  # –û—Ç—Å–µ–∏–≤–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–µ —Ç–µ–∫—Å—Ç—ã
                    quote_texts.append(text)

        if not quote_texts:
            await message.answer("–í —Ü–∏—Ç–∞—Ç–∞—Ö –Ω–µ—Ç –Ω–∏—á–µ–≥–æ")
            return None

        random_quote = random.choice(quote_texts)
        await message.answer(f"–¶–∏—Ç–∞—Ç–∞ –¥–ª—è —Ç–µ–±—è:\n{random_quote}")

    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        return None
